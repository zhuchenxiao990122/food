package ${package.Controller};

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import com.xw.project.dto.${entity}Dto;
import lombok.extern.slf4j.Slf4j;
import com.xw.common.controller.BaseController;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.xw.common.result.RestResponse;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import com.xw.common.result.ResultGenerator;
import com.xw.core.constant.DocConstant;
import ${package.Service}.${table.serviceName};
import ${package.Entity}.${entity};

/**
* @author ${author}
* @since ${date}
*/
@Api(description = "$!{table.comment}" )
@RestController
@RequestMapping("/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end" )
@Slf4j
public class ${table.controllerName} extends BaseController {

  @Autowired
  private ${table.serviceName}  ${table.entityPath}Service;

  @ApiOperation("分页" )
  @GetMapping("/page" )
  public RestResponse< IPage< ${entity}>> page(${entity}Dto ${table.entityPath}Dto) {
    try {
      return  ResultGenerator.genSuccessResult(${table.entityPath}Service.page(${table.entityPath}Dto));
    } catch (Exception e) {
      log.error(DocConstant.search_error,e);
      return ResultGenerator.genFailResult(DocConstant.search_error);
    }
  }


  @ApiOperation("添加" )
  @PostMapping("/add" )
  public RestResponse< String >  add(@RequestBody ${entity} ${table.entityPath}) {
    try {
      ${table.entityPath}Service.add(${table.entityPath});
      return ResultGenerator.genSuccessResult(DocConstant.add_success);
    } catch (Exception e) {
      log.error(DocConstant.add_error,e);
      return ResultGenerator.genFailResult(DocConstant.add_error);
    }
  }

  @ApiOperation("修改" )
  @PutMapping("/update" )
  public RestResponse< String >  update(@RequestBody ${entity} ${table.entityPath}) {
    try {
      ${table.entityPath}Service.update(${table.entityPath});
      return ResultGenerator.genSuccessResult(DocConstant.update_success);
    } catch (Exception e) {
      log.error(DocConstant.update_error,e);
      return ResultGenerator.genFailResult(DocConstant.update_error);
    }
  }

  @ApiOperation("删除" )
  @DeleteMapping("/delete" )
  public RestResponse< String > delete(String id) {
    try {
      ${table.entityPath}Service.delete(id);
      return ResultGenerator.genSuccessResult(DocConstant.delete_success);
    } catch (Exception e) {
      log.error(DocConstant.delete_error,e);
      return ResultGenerator.genFailResult(DocConstant.delete_error);
    }
  }

}